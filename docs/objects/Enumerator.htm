<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Enumerator Object - Definition &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="An enumerator is a type of function object which is called repeatedly to enumerate a sequence of values." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>Enumerator Object</h1>

<p>An enumerator is a type of <a href="Functor.htm">function object</a> which is called repeatedly to enumerate a sequence of values.</p>
<p>Enumerators exist primarily to support <a href="../commands/For.htm">For-loops</a>, and are not usually called directly. The for-loop documentation details the process by which an enumerator is called. The script may implement an enumerator to control which values are assigned to the for-loop's variables on each iteration of the loop.</p>
<p>Built-in enumerators are instances of the <code>Enumerator</code> class (which is derived from <a href="Func.htm">Func</a>), but any function object can potentially be used with a for-loop.</p>

<p>Related: <a href="../commands/For.htm">For-loop</a>, <a href="Object.htm#OwnProps">OwnProps</a>, <a href="Object.htm#OwnMethods">OwnMethods</a>, <a href="Array.htm#__Enum">__Enum (Array)</a>, <a href="Map.htm#__Enum">__Enum (Map)</a></p>

<div class="methodShort"><h2 id="Call">Call</h2>
<p>Retrieves the next item or items in an enumeration.</p>
<pre class="Syntax">Enum.<span class="func">Call</span>(ByRef OutputVar1 <span class="optional">, ByRef OutputVar2</span>)</pre>
<pre class="Syntax"><i>EnumFunction</i>(ByRef OutputVar1 <span class="optional">, ByRef OutputVar2</span>)</pre>
<dl>
  <dt>OutputVar1, OutputVar2</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#variables">Variable</a></p>
    <p>One or more variables for the enumerator to assign values.</p>
  </dd>
  <dt>Return Value</dt>
  <dd><p>A non-zero integer if successful or zero if there were no items remaining.</p></dd>
</dl>
<p>A simple function definition can be used to create an enumerator; in that case, the Call method is implied.</p>
<p>When defining your own enumerator, the number of parameters should match the number of variables expected to be passed to the for-loop (before the "in" keyword). This is usually either 1 or 2, but a for-loop can accept up to 19 variables. To allow the method to accept a varying number of variables, declare <a href="../Functions.htm#optional">optional parameters</a>.</p>
<p>An exception is thrown when the for-loop attempts to call the method if there are more variables than parameters (too many parameters passed, too few defined) or fewer variables than mandatory parameters.</p>
</div>

</body>
</html>
