<!DOCTYPE HTML>
<html lang="en">
<head>
<title>StatusbarGetText - Syntax &amp; Usage | AutoHotkey v1</title>
<meta name="description" content="The StatusbarGetText command retrieves the text from a standard status bar control." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StatusBarGetText</h1>

<p>Retrieves the text from a standard status bar control.</p>

<pre class="Syntax"><span class="func">StatusBarGetText</span>, OutputVar <span class="optional">, Part#, WinTitle, WinText, ExcludeTitle, ExcludeText</span></pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>OutputVar</dt>
  <dd><p>The name of the output variable in which to store the retrieved text.</p></dd>

  <dt>Part#</dt>
  <dd><p>If blank or omitted, it defaults to 1, which is usually the part that contains the text of interest. Otherwise, specify the part number of the bar to retrieve, which can be an <a href="../Variables.htm#Expressions">expression</a>.</p></dd>

  <dt>WinTitle, WinText, ExcludeTitle, ExcludeText</dt>
  <dd>
    <p>If each of these is blank or omitted, the <a href="../misc/WinTitle.htm#LastFoundWindow">Last Found Window</a> will be used. Otherwise, specify for <em>WinTitle</em> a <a href="../misc/WinTitle.htm">window title or other criteria</a> to identify the target window and/or for <em>WinText</em> a substring from a single text element of the target window (as revealed by the included Window Spy utility).</p>
    <p><em>ExcludeTitle</em> and <em>ExcludeText</em> can be used to exclude one or more windows by their title or text. Their specification is similar to <em>WinTitle</em> and <em>WinText</em>, except that <em>ExcludeTitle</em> does not recognize any criteria other than the window title.</p>
    <p>Window titles and text are case-sensitive. By default, hidden windows are not detected and hidden text elements are detected, unless changed with <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> and <a href="DetectHiddenText.htm">DetectHiddenText</a>. By default, a window title must start with the specified <em>WinTitle</em> or <em>ExcludeTitle</em> to be a match, unless changed with <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>.</p>
  </dd>

</dl>

<h2 id="Error_Handling">Error Handling</h2>
<p><span class="ver">[v1.1.04+]</span>: This command is able to throw an exception on failure. For more information, see <a href="Catch.htm#RuntimeErrors">Runtime Errors</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> is set to 1 if there is a problem or 0 otherwise. If there was a problem, <em>OutputVar</em> is also made blank.</p>
<h2 id="Remarks">Remarks</h2>
<p>This command attempts to read the first <em>standard</em> status bar on a window (Microsoft common control: msctls_statusbar32). Some programs use their own status bars or special versions of the MS common control, in which case the text cannot be retrieved.</p>
<p>Rather than using StatusBarGetText in a loop, it is usually more efficient to use <a href="StatusBarWait.htm">StatusBarWait</a>, which contains optimizations that avoid the overhead of repeated calls to StatusBarGetText.</p>

<h2 id="Related">Related</h2>
<p><a href="StatusBarWait.htm">StatusBarWait</a>, <a href="WinGetTitle.htm">WinGetTitle</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="ControlGetText.htm">ControlGetText</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Retrieves and analyzes the text from the first part of a status bar.</p>
<pre>StatusBarGetText, RetrievedText, 1, Search Results
if InStr(RetrievedText, "found")
    MsgBox, Search results have been found.</pre>
</div>

</body>
</html>
