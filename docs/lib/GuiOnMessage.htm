<!DOCTYPE HTML>
<html lang="en">
<head>
<title>OnMessage (GUI) - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The OnMessage method of a Gui object registers a function or method to be called whenever the Gui receives the specified message." />
<meta name="ahk:equiv-v1" content="lib/GuiControl.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css">
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>OnMessage (GUI)</h1>
<p>Registers a function or method to be called whenever the <a href="Gui.htm">Gui</a> receives the specified message.</p>
<pre class="Syntax">GuiOrCtrlObj.<span class="func">OnMessage</span>(MsgNumber, Callback <span class="optional">, AddRemove</span>)</pre>

<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>MsgNumber</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>The number of the message to monitor.</p>
  </dd>
  
  <dt>Callback</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a> or <a href="../misc/Functor.htm">Function Object</a></p>
    <p>The function, method or object to call when the message is received.</p>
    <p>If the GUI has an event sink (that is, if <a href="Gui.htm#Call">Gui()</a>'s <em>EventObj</em> parameter was specified), this parameter may be the name of a method belonging to the event sink.</p>
    <p>Otherwise, this parameter must be a <a href="../misc/Functor.htm">function object</a>.</p>
  </dd>
  
  <dt>AddRemove</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#numbers">Integer</a></p>
    <p>If omitted, it defaults to 1 (call the callback after any previously registered callbacks). Otherwise, specify one of the following numbers:</p>
    <ul>
      <li>1 = Call the callback after any previously registered callbacks.</li>
      <li>-1 = Call the callback before any previously registered callbacks.</li>
      <li>0 = Do not call the callback.</li>
    </ul>
  </dd>
</dl>

<h2 id="Callback_Parameters">Callback Parameters</h2>
<p>The callback receives up to four parameters:</p>
<pre class="Syntax"><i>Callback</i>(GuiOrCtrlObj, wParam, lParam, MsgNumber)</pre>
<p>However, refer to the <a href="GuiOnEvent.htm#Callback_Parameters">notes for OnEvent</a>, especially regarding <code>this</code> and the <em>GuiOrCtrlObj</em> parameter.</p>

<h2 id="Callback_Return_Value">Callback Return Value</h2>
<p>If the callback returns a non-empty value, it is used as the message's reply, any remaining callbacks are not called, and the Gui window's default processing of the message is suppressed.</p>
<p>The callback should return either an Integer or an empty string, or not explicitly return.</p>

<h2 id="Remarks">Remarks</h2>
<p>These notes for <a href="GuiOnEvent.htm">OnEvent</a> also apply to OnMessage: <a href="GuiOnEvent.htm#Threads">Threads</a>, <a href="GuiOnEvent.htm#Destroying_the_GUI">Destroying the GUI</a>.</p>
<p>Gui-specific message callbacks are called after global message callbacks (registered with the <a href="OnMessage.htm">OnMessage</a> function), but before the Gui window's own default processing takes place.</p>
<p>The callback function may be called recursively if the message is received while the callback is already running. The number of threads that can be started is limited only by <a href="_MaxThreads.htm">#MaxThreads</a>.</p>
<p>If <em>GuiOrCtrlObj</em> is a control, window subclassing is used to detect or intercept messages sent directly to the control. These messages are not detected by the global <a href="OnMessage.htm">OnMessage</a> function.</p>

<h2 id="Related">Related</h2>
<p><a href="Gui.htm">Gui</a> and <a href="GuiControl.htm">GuiControl</a> methods: <a href="GuiOnEvent.htm">OnEvent</a>, <a href="GuiOnNotify.htm">OnNotify</a>, <a href="GuiOnCommand.htm">OnCommand</a></p>
<p>Functions: <a href="OnMessage.htm">OnMessage</a>, <a href="PostMessage.htm">PostMessage</a>, <a href="SendMessage.htm">SendMessage</a>, <a href="Critical.htm">Critical</a>, <a href="DllCall.htm">DllCall</a></p>
<p>Other: <a href="../misc/SendMessageList.htm">List of Windows Messages</a>, <a href="../misc/Threads.htm">Threads</a></p>

</body>
</html>
