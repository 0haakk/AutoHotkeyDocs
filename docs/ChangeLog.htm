<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Changes &amp; New Features | AutoHotkey v2</title>
<meta name="description" content="Changes and new features introduced by the current branch of AutoHotkey development." />
<meta name="ahk:equiv-v1" content="AHKL_ChangeLog.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="static/theme.css" rel="stylesheet" type="text/css" />
<script src="static/content.js" type="text/javascript"></script>
</head>
<body>
<h1>Changes &amp; New Features</h1>
<p><a href="v2-changes.htm">Changes from v1.1 to v2.0</a> covers the differences between v1.1 and v2.0.</p>
<p>For full technical details of changes, refer to <a href="https://github.com/AutoHotkey/AutoHotkey/tree/alpha">GitHub</a>.</p>

<h2 id="v2.0.4">2.0.4 - July 3, 2023</h2>
<p>Changed the Reload button on error/warning dialogs to explicitly close the dialog, even if the current script instance isn't terminated.</p>
<p>Removed an optimization for <code>return var</code> which caused the variable to appear blank when accessed within a <code>finally</code> block.</p>
<p>Fixed Default (Switch) to allow space before the colon.</p>
<p>Fixed Array.Prototype.RemoveAt to return the removed value when Length is "explicitly omitted" with <code>unset</code> or <code>var?</code>.</p>
<p>Fixed crashing when a ComObject is passed to a for-loop with only the second variable specified.</p>
<p><strong>Changes merged from v1.1.37.00 and v1.1.37.01:</strong></p>
<p>Changed COM method and property calls to pass large integers as VT_I8, not VT_R8 (floating-point), so the original type and precision is retained. Integers in the 32-bit range are still passed as VT_I4.</p>
<p>Added support for multi-variable enumerators (for-loops) with IDispatch-wrapped AutoHotkey objects. Both the script invoking the object and the object itself must be running a supported AutoHotkey version.</p>
<p>Fixed omitted parameters to receive their default values rather than the "optional argument marker" when an AutoHotkey method is called via IDispatch (COM). The reverse translation was already done when <em>calling</em> COM methods in previous versions.</p>
<p>Fixed <code>VerCompare(a, "&gt;" b)</code> and reduced code size marginally.</p>
<p>Fixed AltTab-related load-time errors to be consistent with other errors.</p>
<p>Fixed errors thrown by a ComObject wrapper not being propagated correctly if it is called via an object/COM.</p>
<p>Fixed the Hotkey GUI control to allow setting the symbols <code>^</code>, <code>!</code> and <code>+</code> as hotkeys.</p>
<p>Fixed the Hotkey control to include modifiers when its value is set to a symbol.</p>
<p>Fixed potential misbehaviour of InputHook.KeyOpt() with single chars.</p>
<ul>
<li>Option removal potentially not affecting the corresponding SC.</li>
<li>Options potentially also being applied to sc000.</li>
</ul>
<p>Fixed a bug with custom combos where a set of hotkeys like <code>a &amp b::</code>, <code>a::</code> and <code>a up::</code> would fail to suppress the release of <kbd>a</kbd> if <code>a::</code> alone is disabled with #HotIf.</p>
<p>Fixed a bug where a key-down event is correctly suppressed by a hotkey, but sending an additional key-down with SendLevel &gt; 0 would prevent the subsequent key-up from being suppressed, even if the sent event is ignored due to #InputLevel.</p>
<p>Fixed <code>a &amp; b up::</code> not suppressing <kbd>b</kbd> if <code>a &amp; b::</code> is present but disabled by #HotIf.</p>
<p>Fixed an issue with hotkeys not firing due to a race condition. If a modifier hotkey such as <code>~*RWin::</code> called Send or GetKeyState too soon, the OS could report that RWin isn't down, so the hook's modifier state would be "corrected" and hotkeys would wrongly fire or fail to fire. This was likely to occur only if another keyboard hook was installed more recently than the script's own hook, since in that case the OS would not update key state until the other hook's thread has resumed and returned.</p>
<p>Fixed hotstrings to use the Last Found Window set by #HotIf.</p>
<p>Fixed an issue where any attempt to reinstall the keyboard or mouse hook would fail if the OS had automatically uninstalled the hook. It is still necessary to meet certain conditions before any such attempt can be made.</p>
<p>Optimized allocation of cached COM property names for built-in IDispatch.</p>
<p>Refactored code to support a build configuration for AutoHotkey as a DLL.</p>

<h2 id="v2.0.3">2.0.3 - June 19, 2023</h2>
<p>Fixed <code>Hotkey("a", "b")</code> to use the original function of "b", not "a". [PR #318]</p>
<p>Fixed FileSetAttribute crash when used in a File Reading Loop. [PR #323]</p>
<p>Fixed duplicate Gui control name errors to correctly abort the thread.</p>
<p>Fixed DateTime/MonthCal Range option not applying minimum value.</p>
<p>Fixed <code>s[x] =&gt; x</code> and other single-line properties starting with "s".</p>
<p>Fixed a bug with deleting a breakpoint on a static line containing <code>=&gt;</code>.</p>
<p>Fixed Button control not becoming default when clicked.</p>
<p>Fixed PixelSearch to unset X when pixel is not found.</p>
<p>Fixed hotstring with escape sequence causing next line to be skipped.</p>
<p>Fixed WinTitle ignoring character 1 when "ahk_" is at character 2.</p>
<p>Fixed remapping to utilize right-hand modifier already being down. For example, <code>+x::+y</code> will no longer release RShift to press LShift.</p>
<p>Changed error message for <code>a == b &amp;&amp; c()</code> and similar cases to avoid alluding to legacy <code>=</code>.</p>
<p>Improved error message for some cases of unintended line continuation.</p>
<p>Fixed reserved words to be permitted as method names, as documented.</p>
<p>Fixed duplicate OnMessage calls for some keyboard messages.</p>
<p>Fixed inter-referenced closures being deleted prematurely.</p>
<p>Fixed SetFont to permit leading spaces in the Options parameter.</p>
<p>Fixed sending of <code>{ASC nnnn}</code>.</p>
<p>Fixed <code>a.base := a</code> to throw an error.</p>
<p>Fixed <code>x.y := unset</code> causing crashes or undefined behaviour.</p>
<p>Fixed GuiControl.Move() to be relative to the GUI's client area even when the GUI is not its parent.</p>
<p>Fixed Menu Add overwriting items which were appended by Menu Insert.</p>
<strong>Launcher</strong>
<p>Run Dash instead of showing the old Welcome page in the documentation, when run without parameters.</p>
<p>Fixed version selection GUI raising an error if Enter is pressed without selecting a version. [PR UX/#4]</p>
<p>Suppress errors when checking whether an absent version can be downloaded.</p>
<p>Fixed absent version download prompt to not show the UAC shield if UAC is disabled.</p>
<p>Fixed issues with #Requires interpretation.</p>
<ul>
<li>Support omitting the "v" prefix.</li>
<li>Support operators (<code>&gt; &gt;= &lt; &lt;= =</code>).</li>
<li>Support a single digit for the version.</li>
</ul>
<strong>Installation</strong>
<p>Fixed the default installation directory for command-line use.</p>
<p>Renamed the Start menu shortcut from "AutoHotkey" to "AutoHotkey Dash".</p>
<p>Fixed EnableUIAccess when running as SYSTEM.</p>
<p>Fixed EnableUIAccess to verify the private key when selecting a certificate.</p>
<strong>Dash</strong>
<p>Fixed Launch Config GUI to update the "Run as administrator" and "Run with UI access" options.</p>
<p>Fixed Up/Down key handling in the Launch Config GUI.</p>

<h2 id="v2.0.2">2.0.2 - January 2, 2023</h2>
<p>Fixed Short DllCall arg type and undefined behaviour for invalid types.</p>
<p>Fixed (non-string) file version number for AutoHotkey binaries.</p>
<p>Fixed parameter type errors to show the correct parameter number.</p>

<h2 id="v2.0.1">2.0.1 - January 1, 2023</h2>
<p>Fixed Func.IsOptional(1) returning 0 in some cases where it shouldn't.</p>
<p>Fixed Gui event handler functions to not drop the Gui parameter when the Gui is its own event sink.</p>
<p>Fixed COM errors to not show "(null)" when no description is available.</p>
<p>Fixed ToolTips intermittently appearing at the wrong position.</p>
<p>Fixed __Enum(unset) to permit a second variable for Array, Match and Gui.</p>
<p>Fixed #include &lt;&gt; error messages to show "Script library" rather than "Function library".</p>
<p>Fixed new threads being unable to prevent a message check with Critical.</p>
<p>Optimized conversion of DllCall type names.</p>
<p>Made some trivial but effective code size optimizations.</p>

<h2 id="Pre-Release">Pre-Release</h2>
<p>For a history of changes prior to the v2.0.0 release, refer to the following (but note some changes were superseded):</p>
<ul>
  <li><a href="https://www.autohotkey.com/boards/viewtopic.php?f=24&t=110696">v2.0 release candidates</a></li>
  <li><a href="https://www.autohotkey.com/boards/viewtopic.php?f=24&t=95688">v2.0-beta releases</a></li>
  <li><a href="https://www.autohotkey.com/boards/viewtopic.php?f=37&t=2120">v2.0-alpha releases</a></li>
</ul>
</body>
</html>