<!DOCTYPE HTML>
<html lang="en">
<head>
<title>GetMethod - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The GetMethod function retrieves the implementation function of a method." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>GetMethod</h1>

<p>Retrieves the implementation function of a method.</p>

<pre class="Syntax">Method := <span class="func">GetMethod</span>(Value, Name)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>
  <dt>Value</dt>
  <dd>
    <p>Type: <a href="../objects/Any.htm">Any</a></p>
    <p>Any value, of any type except ComObject.</p>
  </dd>
  <dt>Name</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#strings">String</a></p>
    <p>The name of the method to retrieve.</p>
  </dd>
</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../objects/Functor.htm">Function Object</a></p>
<p>This function returns the function object which contains the implementation of the method.</p>

<h2 id="Errors">Errors</h2>
<p>If the method is not found or cannot be retrieved without invoking a property getter, a <a href="../objects/Error.htm#MethodError">MethodError</a> is thrown.</p>

<h2 id="Remarks">Remarks</h2>
<p>Methods may be defined through one of the following:</p>
<ul>
  <li>An own value property of the object or one of its base objects, where the value is an object. This is the most common case, used for built-in methods and methods in class definitions. Therefore, it may often be more convenient to simply retrieve the property instead of calling GetMethod.
  <p class="warning"><strong>Note:</strong> GetMethod does not verify that the object is callable.</p></li>
  <li>A dynamic property defined by passing a descriptor like <code>{Call: fn}</code> to <a href="../objects/Object.htm#DefineProp">DefineProp</a>, where <em>fn</em> implements the method.</li>
  <li>A dynamic property with a getter which returns a function object. This case is not supported by GetMethod.</li>
  <li>Handling within a __Call <a href="../Objects.htm#Meta_Functions">meta-function</a>. Methods implemented this way cannot be detected and may not even have a corresponding function object, so are not supported by GetMethod.</li>
</ul>
<p>When calling the function object, it is necessary to supply a value for the normally-hidden <em>this</em> parameter. For example, <code>Method(Value, Parameters*)</code>.</p>

<h2 id="Related">Related</h2>
<p><a href="../Objects.htm">Objects</a>, <a href="HasMethod.htm">HasMethod</a>, <a href="HasBase.htm">HasBase</a>, <a href="HasProp.htm">HasProp</a></p>

<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Retrieves and reports information about the <a href="../objects/Any.htm#GetMethod">GetMethod method</a>.</p>
<pre>
method := GetMethod({}, "GetMethod")  <em>; It's also a method.</em>
MsgBox method.MaxParams  <em>; Takes 2 parameters, including 'this'.</em>
MsgBox method = GetMethod  <em>; Actually the same object in this case.</em>
</pre>
</div>

</body>
</html>
