<!DOCTYPE HTML>
<html lang="en">
<head>
<title>IsSet - Syntax &amp; Usage | AutoHotkey v2</title>
<meta name="description" content="The IsSet function returns a non-zero number if the specified variable has been assigned a value." />
<meta name="ahk:equiv-v1" content="AutoHotkey.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>IsSet</h1>

<p>Returns a non-zero number if the specified variable has been assigned a value.</p>

<pre class="Syntax">VarIsSet := <span class="func">IsSet</span>(&amp;Var)</pre>
<h2 id="Parameters">Parameters</h2>
<dl>

  <dt>&amp;Var</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#variable-references">VarRef</a></p>
    <p>A reference to the variable. For example: <code>IsSet(&amp;MyVar)</code>.</p>
    <p class="note"><strong>Note:</strong> Use the <a href="../Variables.htm#ref">reference operator (&amp;)</a> when checking a variable directly, but not when passing a variable which <em>contains</em> a VarRef.</p>
  </dd>

</dl>

<h2 id="Return_Value">Return Value</h2>
<p>Type: <a href="../Concepts.htm#boolean">Integer (boolean)</a></p>
<p>This function returns 1 (true) if <em>Var</em> has been assigned a value, otherwise 0 (false).</p>

<h2 id="Remarks">Remarks</h2>
<p>A variable which has not been assigned a value is also known as an <a href="../Concepts.htm#uninitialized-variables">uninitialized variable</a>. Attempting to read an uninitialized variable causes an exception to be thrown. IsSet can be used to avoid this, such as for initializing a global or static variable on first use.</p>
<p>When checking a global variable inside a function, it is generally necessary to <a href="../Functions.htm#Global">declare</a> the variable. Otherwise, the use of the <a href="../Variables.htm#ref">reference operator (&amp;)</a> would cause a local variable to be created. This declaration would already be necessary if the global variable is to be assigned a value inside the function.</p>
<p class="note"><strong>Note:</strong> <a href="../Functions.htm#InitStatic">Static initializers</a> such as <code>static my_static_array := []</code> are evaluated only once, the first time they are reached during execution, so typically do not require the use of IsSet.</p>

<h2 id="Related">Related</h2>
<p><a href="../Functions.htm#ByRef">ByRef parameters</a></p>
<h2 id="Examples">Examples</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Reports a non-zero number if <var>MyVar</var> has been assigned a value.</p>
<pre>
Loop 2
    if !IsSet(&amp;MyVar)  <em>; Is this the first "use" of MyVar?</em>
        MyVar := A_Index  <em>; Initialize on first "use".</em>
MsgBox Function1(&amp;MyVar)
MsgBox Function2(&amp;MyVar)

Function1(&amp;Param)  ; ByRef parameter.
{
    if IsSet(&amp;Param)  <em>; Pass a reference to the target of Param.</em>
        return Param  <em>; ByRef parameters are automatically dereferenced.</em>
    else
        return "unset"
}

Function2(Param)
{
    if IsSet(Param)  <em>; Pass the VarRef contained by Param.</em>
        return %Param%  ; Explicitly dereference Param.
    else
        return "unset"
}</pre>
</div>

</body>
</html>
